-----------------------------------
학번을 저장해 두고 검색하는 해시 테이블 프로그램을 작성하시오.
학번(양의 정수)은 Key로서 중복되지 않는다.
두개의 클래스로 이루어진 프로그램을 작성할 것

 

- MyHashtable 클래스
다음과 같은 해시테이블을 구현하는 클래스이다.
  해시 함수는 나누기 방법. 즉, h(x) = x % m
  충돌해결은 open addressing 중에서 linear probing

 

(1) private 필드
   정수 배열(테이블)
   테이블 크기
 
(2) public 메소드
  생성자: 테이블 크기를 매개변수로 받음
  put: 학번을 매개변수로 받아 테이블에 학번을 삽입. 이미 있는 학번이면 삽입 실패
           삽입 성공 여부(true/false) 리턴
  contains: 학번을 매개변수로 받아 검색하여 결과(true/false)를 리턴
  remove: 학번을 매개변수로 받아 그 학번 정보를 삭제. 존재하지 않는 학번이면 삭제 실패
             삭제 성공 여부(true/false)를 리턴
  print: 해시테이블 구현이 제대로 되었나를 확인하기 위해 해시테이블의 모든 인덱스와 내용을 출력
              (내용이 없이 빈칸이거나 DELETED이어도 출력)

 

(3) 기타 필요한 private 메소드들

 


- MyHashtableTest 클래스
main 메소드에서는 다음을 수행

(1) 사용자로부터 해시테이블 크기를 입력받아 비어있는 해시테이블 객체를 생성
(2) 사용자에게 다음과 같은 메뉴를 제공하고, 5를 선택할 때까지 반복
 
  1:삽입 2:검색 3:삭제 4:테이블출력 5:종료

 

1 선택시, 학번을 입력받아 해시테이블에 삽입(put 호출)
2 선택시, 학번을 입력받아 해시테이블에 존재하는지 여부를 출력(contains 호출)
3 선택시, 학번을 입력받아 해시테이블에서 삭제(remove 호출)
4 선택시, 해시테이블의 구조 전체를 출력(print 호출)

 

** main에서는 해시테이블의 내부 구현 방식과 상관 없이 연산을 수행할 수 있어야 함
** 해시 테이블이 가득찬 경우는 알아서 처리할 것
   가득찬 경우를 무시하고 삽입 실패(false)만 리턴해도 되고, 에러 메시지를 출력해도 되고,
   예외 발생시켜도 되고, 적재율이 일정값 이상이면 테이블을 2배로 늘리도록 해도 됨

----------------------------------
목적
- 해시테이블을 구현과 연산을 이해한다.

-----------------------------------

유의사항
- 적절한 comment
  적어도 파일 앞부분에 다음과 같은 주석 달 것
//***************************
// 파일명: ...
// 작성자: ...
// 작성일: ...
// 내용: ...
//***************************
- 들여쓰기 철저히 할 것
- 식별자 이름을 자바 관례에 맞게 적절히 붙일 것
- 프로그램 맨 앞에 과제코드와 본인의 이름을 출력할 것


-----------------------------------
제출
- Java로 작성한 경우 과제코드.jar 파일과 소스코드파일(.java)을 제출
     command-line에서 다음과 같이 실행하여 채점함
     % java -jar 과제코드.jar

 

-----------------------------------

- 실행 예

hw7_1:  홍길동
해시테이블 크기 입력: 10

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->1
삽입할 학번(정수값)을 입력하세요: 11
11 삽입 성공

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->1
삽입할 학번(정수값)을 입력하세요: 55
55 삽입 성공

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->1
삽입할 학번(정수값)을 입력하세요: 21
21 삽입 성공

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->4
해시테이블 내용:
[0] 
[1]  11
[2]  21
[3] 
[4] 
[5]  55
[6] 
[7] 
[8] 
[9] 

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->3
삭제할 학번(정수값)을 입력하세요: 11
11 삭제 성공

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->4
해시테이블 내용:
[0] 
[1]  DELETED
[2]  21
[3] 
[4] 
[5]  55
[6] 
[7] 
[8] 
[9] 

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->1
삽입할 학번(정수값)을 입력하세요: 22
22 삽입 성공

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->4
해시테이블 내용:
[0] 
[1]  DELETED
[2]  21
[3]  22
[4] 
[5]  55
[6] 
[7] 
[8] 
[9] 

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->2
검색할 학번(정수값)을 입력하세요: 21
21 학생을 찾았습니다.

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->1
삽입할 학번(정수값)을 입력하세요: 10
10 삽입 성공

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->4
해시테이블 내용:
[0]  10
[1]  DELETED
[2]  21
[3]  22
[4] 
[5]  55
[6] 
[7] 
[8] 
[9] 

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->1
삽입할 학번(정수값)을 입력하세요: 20
20 삽입 성공

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->4
해시테이블 내용:
[0]  10
[1]  20
[2]  21
[3]  22
[4] 
[5]  55
[6] 
[7] 
[8] 
[9] 

 

1:삽입 2:검색 3:삭제 4:테이블출력 5:종료 --->5
프로그램을 종료합니다.