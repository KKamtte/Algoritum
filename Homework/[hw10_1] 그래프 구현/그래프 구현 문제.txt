방향 그래프를 인접 리스트로 구현하는 프로그램을 작성하시오.
단, 정점 수가 n이면, 정점 번호는 0, 1, 2, ... , n-1이다.

 

- DirectedGraph 클래스
인접 리스트로 방향그래프를 구현하는 클래스

 

private 인스턴스 변수:
   인접리스트 배열을 가리킬 변수(list)
   정점수(n) 

 

private Node 클래스:
   정점번호 필드(vertex)
   다음 노드를 가리키는 필드(link)

 

public 메소드:
   생성자 : 정점수 n을 매개변수로 받아 정점 n개, 간선은 없는 초기 그래프를 생성
            이 때, 정점수를 특정 값(예를 들어 100)으로 제한하면 안됨
            크기 n인 Node형 배열을 생성하여 list에 지정하면 됨
   addEdge : 두개의 정점 v1, v2를 매개변수로 받아 그래프에 간선 <v1, v2>를 추가
             잘못된 정점 번호인 경우 오류 메시지를 출력하고 삽입하지 않아야 함
             이미 존재하는 간선을 또 삽입하는지는 체크하지 않아도 됨. 즉, 혹시 또 삽입하면 삽입되도록 두면 됨
   printAdjacencyList : 구현이 제대로 되었는지 확인하기 위해 그래프의 모든 정점의 인접 리스트를 모두 출력

 

- DirectedGraphTest 클래스
main 메소드는 다음을 수행한다.

 

(1) 정점 수 n을 입력받음
(2) 정점 수가 n인 방향 그래프 G=(V, E)를 생성(graph)
    V = {0, 1, 2, ..., n-1}
    E = {}
(3) 간선 수 e를 입력받음
(4) e개의 정점 쌍 v1과 v2를 입력받아 그래프에 <v1, v2>를 삽입
    정점 번호 오류 발생시 무시하고 무조건 반복문을 e번 반복하여 간선을 입력받을 것
    예를 들어 e=6개의 간선 삽입 과정에서 1개가 오류이면 5개만 삽입하면 됨
(5) graph.printAdjacencyList(); 실행

 

- 실행 예:
hw10_1 : 홍길동

 

정점 수 입력: 5
간선 수 입력: 6

 

6개의 간선 입력(각 간선은 정점 번호 2개를 whitespace로 구분하여 입력):
간선1 입력: 3 4  
간선2 입력: 1 2  
간선3 입력: 1 3 
간선4 입력: 3 1 
간선5 입력: 3 0
간선6 입력: 2 5  
간선 삽입 오류 - 잘못된 정점 번호입니다. <2, 5>

 

정점 0에 인접한 정점 = 
정점 1에 인접한 정점 = 3 2
정점 2에 인접한 정점 =
정점 3에 인접한 정점 = 4 1 0
정점 4에 인접한 정점 = 

----------------------------------------------------------
목적
- 인접리스트를 이용한 방향 그래프 구현을 이해한다.