-----------------------------------
아이디를 관리하는 이진검색트리 프로그램을 작성하시오.
아이디는 문자열이며, 중복되지 않는다.

 

- MyBinarySearchTree 클래스
  문자열 아이디를 저장하는 이진검색트리 클래스를 다음과 같이 정의한다.

 

(1) private 필드
   트리의 루트를 가리키는 노드 타입 변수(root) 
   트리에 저장된 아이디 수(노드 수) - 정수형 변수

 

(2) public 메소드
   생성자
   print() - 트리에 저장된 아이디를 모두 출력
   size() - 트리에 저장된 아이디 수(노드 수)를 리턴
   contains() - 트리에 아이디가 존재하는지 여부를 검사
        매개변수 : 아이디
        리턴값 : true/false 
   add() - 트리에 아이디(노드)를 삽입. 이미 존재하는 아이디면 삽입 실패
        매개변수 : 아이디
        리턴값 : 삽입 성공시 true, 실패시 false
   remove() - 트리에서 아이디(노드)를 삭제. 존재하지 않는 아이디면 삭제 실패 ************ 선택 과제임
        매개변수 : 아이디
        리턴값 : 삭제 성공시 true, 실패시 false

   ** print() 이외의 메소드내에서는 출력문이 없어야 함

 

(3) private 메소드
   inorder() - 트리를 중순위 순회하며 키값을 출력
        매개변수 : 중순위 순회할 트리(서브트리)의 루트
        리턴값: 없음
   기타 필요한 메소드들 정의

 

(4) 트리의 노드 구조를 정의하는 private 클래스
    아이디(문자열) 필드
    왼쪽자식링크 필드
    오른쪽자식링크 필드

 

 

- 메인 클래스(예를 들어 MyBinarySearchTreeTest 클래스)

main에서는 다음을 수행

 

(1) 비어있는 MyBinarySearchTree 객체를 생성

 

(2) 5를 선택할 때까지 다음과 같은 메뉴를 반복하여 제공

    1:삽입 2:검색 3:삭제 4:전체조회 5:종료                     ************ 3:삭제는 선택 과제임

 

각 메뉴 선택시 할 일은 다음과 같다.
1:삽입 - 사용자로부터 아이디를 입력받아 트리에 삽입하고, 삽입 성공 여부를 알림
2:검색 - 사용자로부터 아이디를 입력받아 트리에 존재하는 아이디인지 검사
3:삭제 - 사용자로부터 아이디를 입력받아 트리에서 삭제하고, 삭제 성공 여부를 알림 ************ 선택 과제임
4:전체조회 - 트리에 저장된 아이디의 갯수를 출력하고, 저장된 아이디를 모두 출력

 

** 이진검색트리 외부에서는 구현 세부사항을 알 수 없도록 해야 하므로
   MyBinarySearchTree 외부(main() 메소드)에서는 Node 클래스, 변수 root 등은 언급할 수 없다.
   즉, 수업 시간에 다룬 대부분의 이진트리 알고리즘은 public method로 구현할 수 없다.
   이 경우 private method로 알고리즘을 구현하고,
   main()에서는 일단 MyBinarySearchTree의 public method를 호출하고,
   public method는 알고리즘을 구현한 private method를 호출하는 방식을 취하면 된다.

 


public class MyBinarySearchTreeTest {
      public static void main(String[] args) {
          ...
          print();
          ...
      }
}

 

public class MyBinarySearchTree {
      private Node root;
      ...
      public void print() {
           ...
           inorder(root);
           ...
      }
      private void inorder(Node t) {  // 재귀 메소드
           ...
      }
      private class Node {
           ...
      }
}


** 참고: 과제에서 구현하는 이진검색트리는 키값(아이디) 이외의 정보를 저장하지 않으나
   추가로 값 필드를 두어 key-value 쌍을 저장할 수 있다.
   이 경우 보다 다양한 기능을 제공하는 이진검색트리를 구현할 수 있다.

----------------------------------
목적
- binary search tree의 연산을 이해한다.